{"version":3,"sources":["Login.tsx"],"names":[],"mappings":"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","file":"Login.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Avatar,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\ninterface FormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const formData: FormData = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleSubmit = async (values: FormData, { setSubmitting }: any) => {\r\n    try {\r\n      await validationSchema.validate(values, { abortEarly: false });\r\n      setSubmitting(false);\r\n      navigate(\"/credit-card\");\r\n    } catch (error) {\r\n      console.error(\"Validation error:\", error);\r\n      setSubmitting(false);\r\n      alert(\"Validation failed. Please check your inputs.\");\r\n    }\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .min(8, \"Password must be at least 8 characters long\"),\r\n  });\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ minHeight: \"80vh\" }}\r\n      >\r\n        <Box\r\n          component={Paper}\r\n          elevation={3}\r\n          sx={{\r\n            padding: 3,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            backgroundImage:\r\n            \"linear-gradient(to bottom right, #385170,#142d4c,  #38598b)\",\r\n            borderRadius: \"10px\",\r\n            backgroundColor: \"transparent\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}></Avatar>\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            Login\r\n          </Typography>\r\n          <Formik\r\n            initialValues={formData}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ isSubmitting }: any) => (\r\n              <Form style={{ width: \"100%\", marginTop: \"1rem\" }}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className=\"error\"\r\n                  style={{ fontSize: \"small\", color: \"red\" }}\r\n                />\r\n\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  color=\"primary\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"error\"\r\n                  style={{ fontSize: \"small\", color: \"red\" }}\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  sx={{ mt: 3, mb: 2, borderRadius: \"25px\"  }}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]}