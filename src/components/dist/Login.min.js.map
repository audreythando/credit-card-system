{"version":3,"sources":["Login.tsx"],"names":["react_1","require","material_1","InputAdornment_1","IconButton_1","icons_material_1","react_router_dom_1","formik_1","Yup","Login","handleClickShowPassword","setShowPassword","showPassword","navigate","useNavigate","_a","useState","validationSchema","object","shape","email","string","required","password","min","createElement","Container","maxWidth","Grid","container","spacing","justifyContent","alignItems","style","minHeight","Box","component","Paper","elevation","sx","padding","display","flexDirection","backgroundImage","borderRadius","backgroundColor","Avatar","m","bgcolor","Typography","variant","color","Formik","initialValues","onSubmit","values","setSubmitting","validate","abortEarly","_b","sent","console","error","error_1","alert","isSubmitting","Form","width","marginTop","Field","as","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","ErrorMessage","className","fontSize","type","InputProps","endAdornment","position","aria-label","onClick","edge","Visibility","VisibilityOff","Button","mt","mb","exports"],"mappings":"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","file":"Login.min.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Avatar,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\ninterface FormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const formData: FormData = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleSubmit = async (values: FormData, { setSubmitting }: any) => {\r\n    try {\r\n      await validationSchema.validate(values, { abortEarly: false });\r\n      setSubmitting(false);\r\n      navigate(\"/credit-card\");\r\n    } catch (error) {\r\n      console.error(\"Validation error:\", error);\r\n      setSubmitting(false);\r\n      alert(\"Validation failed. Please check your inputs.\");\r\n    }\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .min(8, \"Password must be at least 8 characters long\"),\r\n  });\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ minHeight: \"80vh\" }}\r\n      >\r\n        <Box\r\n          component={Paper}\r\n          elevation={3}\r\n          sx={{\r\n            padding: 3,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            backgroundImage:\r\n            \"linear-gradient(to bottom right, #385170,#142d4c,  #38598b)\",\r\n            borderRadius: \"10px\",\r\n            backgroundColor: \"transparent\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}></Avatar>\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            Login\r\n          </Typography>\r\n          <Formik\r\n            initialValues={formData}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ isSubmitting }: any) => (\r\n              <Form style={{ width: \"100%\", marginTop: \"1rem\" }}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className=\"error\"\r\n                  style={{ fontSize: \"small\", color: \"red\" }}\r\n                />\r\n\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  color=\"primary\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {showPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"error\"\r\n                  style={{ fontSize: \"small\", color: \"red\" }}\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  sx={{ mt: 3, mb: 2, borderRadius: \"25px\"  }}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]}