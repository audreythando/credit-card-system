{"version":3,"sources":["Navbar.tsx"],"names":["react_1","require","AppBar_1","Box_1","Toolbar_1","Typography_1","IconButton_1","Menu_1","Logo_jpg_1","material_1","react_router_dom_1","ButtonAppBar","handleCreditCardsTable","navigate","handleClose","logout","useNavigate","_a","useState","drawerOpen","setDrawerOpen","menuIconRef","useRef","barbieAvatarRef","_b","tooltipOpen","setTooltipOpen","useEffect","timer","setTimeout","clearTimeout","createElement","sx","flexGrow","position","color","backgroundColor","Avatar","src","alt","width","height","lineHeight","variant","component","marginLeft","size","edge","aria-label","onClick","mr","ref","Tooltip","open","onClose","disableFocusListener","disableHoverListener","disableTouchListener","title","List","ListItem","ListItemText","primary","placement","arrow","className","marginRight","Drawer","anchor","exports"],"mappings":"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","file":"Navbar.min.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport logo from \"../../assets/images/Logo.jpg\";\r\nimport { Avatar, List, ListItem, ListItemText, Drawer, Tooltip } from '@mui/material';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ButtonAppBar() {\r\n  const navigate = useNavigate();\r\n\r\n  const [drawerOpen, setDrawerOpen] = useState(false); // State to manage drawer\r\n\r\n\r\n  const handleCreditCardsTable = () => {\r\n    navigate(\"/table\");\r\n    handleClose();\r\n  };\r\n\r\n  const logout = () => {\r\n    navigate(\"/\");\r\n    handleClose();\r\n  };\r\n\r\n  const menuIconRef = useRef(null);\r\n  const barbieAvatarRef = useRef(null);\r\n\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  const handleAvatarClick = () => {\r\n    setTooltipOpen(!tooltipOpen);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setTooltipOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer: string | number | NodeJS.Timeout | undefined;\r\n    \r\n    if (tooltipOpen) {\r\n      timer = setTimeout(() => {\r\n        handleClose();\r\n      }, 3000); // Close Tooltip after 3 seconds if nothing is clicked\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [tooltipOpen]);\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\" sx={{ color: \"#a7bcb9\", backgroundColor: \"#081f37\" }}>\r\n        <Toolbar>\r\n          <Avatar src={logo} alt=\"Reg\" sx={{ width: 25, height: 25, lineHeight: \"50%\" }} />\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, width: 25, height: 25, lineHeight: \"30px\", marginLeft: \"10px\" }}>\r\n            CREDIT CARD SYSTEM\r\n          </Typography>\r\n          {/* Toggle drawer when menu icon is clicked */}\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            aria-label=\"menu\"\r\n            color=\"inherit\"\r\n            onClick={() => setDrawerOpen(true)}\r\n            sx={{ mr: 2 }}\r\n            ref={menuIconRef}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* Avatar with Tooltip */}\r\n          <Tooltip\r\n            open={tooltipOpen}\r\n            onClose={handleClose}\r\n            disableFocusListener\r\n            disableHoverListener\r\n            disableTouchListener\r\n            title={\r\n              <List sx={{ backgroundColor: \"#081f37\", width: \"150px\" }}>\r\n                <ListItem onClick={handleCreditCardsTable}>\r\n                  <ListItemText primary=\"Settings\" />\r\n                </ListItem>\r\n                <ListItem onClick={logout}>\r\n                  <ListItemText primary=\"Logout\" />\r\n                </ListItem>\r\n              </List>\r\n            }\r\n            placement=\"bottom-end\"\r\n            arrow\r\n          >\r\n            <Avatar\r\n              ref={barbieAvatarRef}\r\n              className=\"barbie\"\r\n              color=\"inherit\"\r\n              onClick={handleAvatarClick}\r\n              sx={{ width: 25, height: 25, marginRight: \"10px\" }}\r\n            />\r\n          </Tooltip>\r\n        </Toolbar>\r\n        {/* Drawer for mobile */}\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={drawerOpen}\r\n          onClose={() => setDrawerOpen(false)}\r\n          className=\"drawer-background\"\r\n        >\r\n          <List sx={{ backgroundColor: \"#081f37\", height: \"100vh\" }}>\r\n            <ListItem onClick={handleCreditCardsTable}>\r\n              <ListItemText primary=\"Credit Cards Table\" />\r\n            </ListItem>\r\n            <ListItem onClick={logout}>\r\n              <ListItemText primary=\"Logout\" />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\n"]}